plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform(quarkusPlatformGroupId + ':' + quarkusPlatformArtifactId + ':' + quarkusPlatformVersion)
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-hibernate-orm-panache'
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    implementation 'io.quarkus:quarkus-liquibase'
    implementation 'io.quarkus:quarkus-arc'

    implementation 'io.quarkus:quarkus-vertx' // <-- per CORS
    implementation 'io.quarkus:quarkus-hibernate-orm'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
    implementation 'io.quarkus:quarkus-hibernate-validator'

    // Security (Elytron JDBC)
    implementation 'io.quarkus:quarkus-elytron-security-jdbc'

    // JWT (SmallRye JWT)
    implementation 'io.quarkus:quarkus-smallrye-jwt'

    // BCrypt per hash delle password
    implementation 'org.mindrot:jbcrypt:0.4'
}

group 'org.crusadia.avramax'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
